
@model UserDetails
@{
    var id = new IdHelpers().GenerateSchoolId();
}
<input type="hidden" value="@id" name="IdNo" />
<div class="row">
    <div class="col-lg-12">
        @{
            Html.DevExpress().TextBoxFor(m => m.SchoolId, settings =>
            {

                settings.Properties.Caption = "School Id";
                settings.Width = Unit.Percentage(100);
            }).Bind(Model?.SchoolId ?? ($"FGSC{DateTime.Now.Year}-" + id.ToString($"00"))).GetHtml();
        }
    </div>
</div>
<div class="row">
    <div class="col-lg-12">
        @{
            Html.DevExpress().TextBoxFor(m => m.Users.Email, settings =>
            {
                settings.Properties.Caption = "Email";
                settings.Width = Unit.Percentage(100);
            }).GetHtml();
        }
    </div>
</div>
<div class="row">
    <div class="col-lg-12">
        @{
            Html.DevExpress().TextBoxFor(m => m.Users.Password, settings =>
            {
                settings.Properties.Caption = "Password";
                settings.Width = Unit.Percentage(100);
            }).GetHtml();
        }
    </div>
</div>
<div class="row">
    <div class="col-lg-12">
        @{
            Html.DevExpress().TextBoxFor(m => m.FirstName, settings =>
            {
                settings.Properties.Caption = "First Name";
                settings.Width = Unit.Percentage(100);
            }).GetHtml();
        }
    </div>
</div>
<div class="row">
    <div class="col-lg-12">
        @{
            Html.DevExpress().TextBoxFor(m => m.MiddleName, settings =>
            {
                settings.Properties.Caption = "Middle Name";
                settings.Width = Unit.Percentage(100);
            }).GetHtml();
        }
    </div>
</div>
<div class="row">
    <div class="col-lg-12">
        @{
            Html.DevExpress().TextBoxFor(m => m.LastName, settings =>
            {
                settings.Properties.Caption = "Last Name";
                settings.Width = Unit.Percentage(100);
            }).GetHtml();
        }
    </div>
</div>
<div class="row">
    <div class="col-lg-12">
        @{
            Html.DevExpress().TokenBoxFor(m => m.UserRoles, settings =>
            {
                settings.Properties.Caption = "User Roles";
                settings.Width = Unit.Percentage(100);
                settings.Properties.ValueField = "Name";
                settings.Properties.TextField = "Name";
                settings.Init = (s, e) =>
                {
                    if (s is MVCxTokenBox t)
                    {
                        if (Model?.UserRoles != null)
                        {
                            foreach (var i in Model?.Users.UserRoles)
                            {
                                t.Items.Add(i.Name);
                            }
                        }
                    }
                };
            }).BindList(new UnitOfWork().UserRolesRepo.Get()).GetHtml();
        }
    </div>
</div>
<div class="row margin-top-10">
    <div class="col-lg-12 col-md-12 ">
        @{
            Html.DevExpress().Button(settings =>
            {
                settings.Name = "btnSubmit";
                settings.Text = "Submit";
                settings.ClientSideEvents.Click = "function(s,e){TeachersGridView.UpdateEdit()}";

            }).GetHtml();
            Html.DevExpress().Button(settings =>
            {
                settings.Name = "btnCancel";
                settings.Text = "Cancel";
                settings.ControlStyle.CssClass = "margin-left-10";
                settings.ClientSideEvents.Click = "function(s,e){TeachersGridView.CancelEdit()}";
            }).GetHtml();
        }
    </div>
</div>